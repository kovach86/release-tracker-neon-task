openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v1
  url: /src/main/java/swagger-config.yaml
servers:
  - url: http://localhost:8080
    description: Url within IDEA
  - url: http://localhost:8090
    description: Url when starting as docker

paths:
  /releases:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Release
      operationId: getAllReleases
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResponseModel'
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Release
      operationId: insertRelease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResponseModel'
  /releases/filter:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Release
      operationId: getReleaseByParams
      parameters:
        - name: releaseDate
          in: query
          required: false
          schema:
            type: string
            default: 0001-01-01
        - name: lastUpdateDate
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
        - name: releaseStatus
          in: query
          required: false
          schema:
            type: string
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: recordsToTake
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
  /releases/{releaseId}:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Release
      operationId: getSingleRelease
      parameters:
        - name: releaseId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResponseModel'
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Release
      operationId: updateRelease
      parameters:
        - name: releaseId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResponseModel'
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - Release
      operationId: delete
      parameters:
        - name: releaseId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResponseModel'
  
  /user/authorize:
    post:
      tags:
        - User
      operationId: returnBearerToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
            example:
              email: test@demo-test.com
              password: test123
              returnSecureToken: true
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BaseResponseModel'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    BaseResponseModel:
      type: object
      properties:
        description:
          type: string
    ReleaseDto:
      required:
        - releaseDescription
        - releaseName
      type: object
      properties:
        id:
          type: integer
          format: int32
        releaseName:
          type: string
        releaseDescription:
          type: string
        releaseDate:
          type: string
        lastUpdateAt:
          type: string
        createdAt:
          type: string
        releaseStatus:
          type: string
    UserInfo:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        returnSecureToken:
          type: boolean

    ReleaseResponseModel:
      type: object
      properties:
        description:
          type: string
        result:
          type: object
    PaginationResponse:
      type: object
      properties:
        description:
          type: string
        currentPage:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        recordsPerPage:
          type: integer
          format: int32
        allRecords:
          type: integer
          format: int32
        result:
          type: object
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
